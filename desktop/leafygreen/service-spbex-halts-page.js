import { ServiceSpbexHaltsPage } from '../../shared/service-spbex-halts-page.js';
import { html } from '../../shared/template.js';
import { ref } from '../../shared/element/templating/ref.js';
import { when } from '../../shared/element/templating/when.js';
import { pageStyles } from './page.js';
import { serviceControlsTemplate } from './service-page.js';
import ppp from '../../ppp.js';

await ppp.i18n(import.meta.url);

const exampleProxyHeaders = `{
  'User-Agent': '[%#navigator.userAgent%]',
  Cookie: ''
}`;

const exampleInstrumentsCode = `/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
 *
 * @returns {Object[]} instruments - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.
 * @returns {string} instruments[].isin - ISIN –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @returns {string} instruments[].ticker - –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @returns {string} instruments[].name - –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @returns {string} instruments[].currency - –í–∞–ª—é—Ç–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 */
const instruments = [%#JSON.stringify(await (await fetch(ppp.rootUrl +
  '/instruments/spbex-stocks.json')).json())%];

instruments.push({symbol: 'SPBE', isin: 'RU000AOJQ9P9',
  fullName: '–°–ü–ë –ë–∏—Ä–∂–∞', currency: 'USD'});

return instruments.map((i) => {
  return {
    isin: i.isin,
    ticker: i.symbol,
    name: i.fullName.replace("'", "''"),
    currency: i.currency
  };
});`;

const exampleFormatterCode = `/**
 * –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑–µ.
 *
 * @param {string} isin - ISIN –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} ticker - –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} name - –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} currency - –í–∞–ª—é—Ç–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
 * @param {string} date - –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–∏—Ä–∂–∏.
 * @param {string} url - –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ –±–∏—Ä–∂–∏.
 * @param {string} start - –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã, MSK.
 * @param {string} finish - –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—É–∑—ã, MSK.
 */
return \`‚ÄºÔ∏è‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤ (SPBEX)
\${'$'}\${ticker || isin}
<b>\${name}, \${isin}</b>
üïí \${start} - \${finish}

<a href="\${encodeURIComponent(url)}">–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–æ—Ä–≥–æ–≤</a>
\`;`;

export const serviceSpbexHaltsPageTemplate = (context, definition) => html`
  <template>
    <form novalidate>
      <${'ppp-page'}>
        <span slot="header">
          ${(x) =>
            x.document.name
              ? `–°–µ—Ä–≤–∏—Å - –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—É–∑—ã SPBEX - ${x.document.name}`
              : '–°–µ—Ä–≤–∏—Å - –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—É–∑—ã SPBEX'}
        </span>
        ${when((x) => x.document._id, serviceControlsTemplate)}
        <section>
          <div class="label-group">
            <h5>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞</h5>
            <p>–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∏–º—è, —á—Ç–æ–±—ã —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å, –∫–æ–≥–¥–∞
              –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è.</p>
          </div>
          <div class="input-group">
            <${'ppp-text-field'}
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
              value="${(x) => x.document.name}"
              ${ref('name')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ü—Ä–æ—Ñ–∏–ª—å API Supabase</h5>
          </div>
          <div class="input-group">
            <${'ppp-collection-select'}
              ${ref('supabaseApiId')}
              value="${(x) => x.document.supabaseApiId}"
              :context="${(x) => x}"
              :preloaded="${(x) => x.document.supabaseApi ?? ''}"
              :query="${() => {
                return (context) => {
                  return context.services
                    .get('mongodb-atlas')
                    .db('ppp')
                    .collection('apis')
                    .find({
                      $and: [
                        {
                          type: `[%#(await import('./const.js')).APIS.SUPABASE%]`
                        },
                        {
                          $or: [
                            { removed: { $ne: true } },
                            { _id: `[%#this.document.supabaseApiId ?? ''%]` }
                          ]
                        }
                      ]
                    })
                    .sort({ updatedAt: -1 });
                };
              }}"
              :transform="${() => ppp.decryptDocumentsTransformation()}"
            ></ppp-collection-select>
            <${'ppp-button'}
              class="margin-top"
              @click="${() =>
                window.open('?page=api-supabase', '_blank').focus()}"
              appearance="primary"
            >
              –î–æ–±–∞–≤–∏—Ç—å API Supabase
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ü—Ä–æ–∫—Å–∏-—Ä–µ—Å—É—Ä—Å</h5>
            <p>–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ URL, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç
              –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              placeholder="https://example.com"
              value="${(x) => x.document.proxyURL}"
              ${ref('proxyURL')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞</h5>
            <p>–ó–∞–≥–æ–ª–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫
              –ø—Ä–æ–∫—Å–∏-—Ä–µ—Å—É—Ä—Å—É.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) => x.document.proxyHeaders ?? exampleProxyHeaders}"
              ${ref('proxyHeaders')}
            ></ppp-codeflask>
            <${'ppp-button'}
              class="margin-top"
              @click="${(x) => x.proxyHeaders.updateCode(exampleProxyHeaders)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞</h5>
            <p>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö –æ—Ç
              –±–∏—Ä–∂–∏. –ó–∞–¥–∞—ë—Ç—Å—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="5"
              value="${(x) => x.document.interval ?? '5'}"
              ${ref('interval')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ì–ª—É–±–∏–Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è</h5>
            <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="50"
              value="${(x) => x.document.depth ?? '50'}"
              ${ref('depth')}
            ></ppp-text-field>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–°–ª–æ–≤–∞—Ä—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</h5>
            <p>–§—É–Ω–∫—Ü–∏—è –Ω–∞ —è–∑—ã–∫–µ PLV8, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–∏—Ä–∂–∏ —Å
              –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ
              –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ç–∞–ª–æ–≥ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) =>
                x.document.instrumentsCode ?? exampleInstrumentsCode}"
              ${ref('instrumentsCode')}
            ></ppp-codeflask>
            <${'ppp-button'}
              class="margin-top"
              @click="${(x) =>
                x.instrumentsCode.updateCode(exampleInstrumentsCode)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
            <ppp-button
              class="margin-top"
              ?disabled="${(x) => x.page.loading}"
              @click="${(x) => x.callInstrumentsFunction()}"
              appearance="primary"
            >
              –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ë–æ—Ç</h5>
            <p>–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö.
              –î–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –≤ –∫–∞–Ω–∞–ª–µ/–≥—Ä—É–ø–ø–µ.</p>
          </div>
          <div class="input-group">
            <ppp-collection-select
              ${ref('botId')}
              value="${(x) => x.document.botId}"
              :context="${(x) => x}"
              :preloaded="${(x) => x.document.bot ?? ''}"
              :query="${() => {
                return (context) => {
                  return context.services
                    .get('mongodb-atlas')
                    .db('ppp')
                    .collection('bots')
                    .find({
                      $or: [
                        { removed: { $ne: true } },
                        { _id: `[%#this.document.botId ?? ''%]` }
                      ]
                    })
                    .sort({ updatedAt: -1 });
                };
              }}"
              :transform="${() => ppp.decryptDocumentsTransformation()}"
            ></ppp-collection-select>
            <ppp-button
              class="margin-top"
              @click="${() =>
                window.open('?page=telegram-bot', '_blank').focus()}"
              appearance="primary"
            >
              –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–ö–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞</h5>
            <p>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è
              —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—É–∑–∞—Ö.</p>
          </div>
          <div class="input-group">
            <ppp-text-field
              type="number"
              placeholder="–ö–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞"
              value="${(x) => x.document.channel}"
              ${ref('channel')}
            ></ppp-text-field>
            <ppp-button
              class="margin-top"
              ?disabled="${(x) => x.page.loading}"
              @click="${(x) => x.sendTestSpbexHaltMessage()}"
              appearance="primary"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            </ppp-button>
          </div>
        </section>
        <section>
          <div class="label-group">
            <h5>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h5>
            <p>–õ–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –Ω–∞ —è–∑—ã–∫–µ
              PLV8.</p>
          </div>
          <div class="input-group">
            <${'ppp-codeflask'}
              :code="${(x) => x.document.formatterCode ?? exampleFormatterCode}"
              ${ref('formatterCode')}
            ></ppp-codeflask>
            <ppp-button
              class="margin-top"
              @click="${(x) =>
                x.formatterCode.updateCode(exampleFormatterCode)}"
              appearance="primary"
            >
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            </ppp-button>
          </div>
        </section>
      </ppp-page>
    </form>
  </template>
`;

// noinspection JSUnusedGlobalSymbols
export default ServiceSpbexHaltsPage.compose({
  template: serviceSpbexHaltsPageTemplate,
  styles: pageStyles
});
